version: "3.4"

x-common-backend: &common-backend
  restart: unless-stopped
  env_file:
    - .env
  build:
    context: .
    dockerfile: ./docker/Dockerfile
  stdin_open: true
  tty: true
  depends_on:
    - postgres
  volumes:
    - .:/back

services:
  django:
    <<: *common-backend
    ports:
      - "${BACKEND_PORT_HOST}:8000"
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/back

  postgres:
    image: "postgres:10.5-alpine"
    ports:
      - "127.0.0.1:${POSTGRES_PORT_HOST}:${POSTGRES_PORT}"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    env_file:
      - .env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_PORT
      - POSTGRES_HOST

  celery-worker:
    <<: *common-backend
    command: celery -A coalibot_fr.celery_app worker -B -E -l debug --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
     - redis

  redis:
    image: 'redis:3.0-alpine'
    command: redis-server
    volumes:
      - 'redis:/data'
    ports:
      - '127.0.0.1:6379:6379'

volumes:
  db-data:
  redis: